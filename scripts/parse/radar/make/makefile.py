import sys


class makefile(object):
    def __init__(self, filename="Makefile", default_goal="all"):
        self.content = ""
        self.filename = filename
        self.comment(f"This Makefile is generated by {sys.argv[0]}")
        self.comment(
            f"Do not modify this file manually, modify the config file instead"
        )
        self.newline()
        self.variable(".DEFAULT_GOAL", default_goal)
        self.newline()
        self.variable("make_flag", "--no-print-directory -j8")
        self.newline()

    def newline(self):
        self.content += "\n"

    def rule(self, target, deps: list, cmds=None, phony=False):
        if cmds:
            if isinstance(cmds, str):
                cmd = f"{cmds}"
            else:
                cmd = "\n\t".join(cmds) + "\n"
        else:
            cmd = ""

        if phony:
            l = len(target) + 2 - len(".PHONY:")
            if l >= 0 and len(deps) != 0:
                space = " " * l
            else:
                space = " "
            self.content += f"\n.PHONY:{space}{target}"

        dep = ""
        if isinstance(deps, str):
            dep = deps + "\n"
        else:
            if len(deps) == 0:
                dep = "\n"
            else:
                pre_space = " " * (len(target) + 2)
                max_len = max([len(s) for s in deps])
                for i, v in enumerate(deps):
                    dep += "" if i == 0 else pre_space
                    dep += v
                    dep += (
                        " " * (max_len - len(v) + 1) + "\\\n"
                        if i != len(deps) - 1
                        else "\n"
                    )

        self.content += f"\n{target}: {dep}"
        if len(cmd) != 0:
            self.content += f"\t{cmd}\n"

    def comment(self, content):
        if isinstance(content, str):
            text = f"{content}"
        else:
            text = "\n# ".join(content)
        self.content += f"\n# {text}"

    def variable(self, vname, vvalue):
        self.content += f"\n{vname}:={vvalue}"

    def save(self):
        with open(self.filename, "w") as file:
            file.write(self.content)
